using Catel.Windows.Controls;
namespace InfConstractions.Views
{
    using System.Collections.ObjectModel;
    using System.Windows.Input;
    using InfConstractions.ViewModels;
    using System.Data.SqlClient;
    using Models;
    using System.Data.Entity.Infrastructure;
    using System;
    using System.Collections.Generic;
    using Catel.Logging;

    public partial class  ProverkaGUView
    {
        public ProverkaGUView(Entities context):this(new ProverkaGUViewModel(context))
        {        
            InitializeComponent();
        }

        public ProverkaGUView() 
        {
            InitializeComponent();
        }
        public ProverkaGUView(ProverkaGUViewModel viewmodel)
        {
            DataContext = viewmodel;
            InitializeComponent();
        }

        private void TableView_PropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e)
        {
            if (DataContext != null)
            {
                List<proverkaGU> l = new List<proverkaGU>();
                DbChangeTracker tr = ((ProverkaGUViewModel)DataContext).Context.ChangeTracker;
                tr.DetectChanges();
                if (tr.HasChanges())
                {
                    foreach (DbEntityEntry p in tr.Entries())
                    {
                        if (p.State == System.Data.Entity.EntityState.Modified)
                        {
                            ((proverkaGU)p.Entity).updated = DateTimeOffset.Now;
                            l.Add((proverkaGU)p.Entity);
                        }
                    }
                ((ProverkaGUViewModel)DataContext).cmSaveChanges();
                    foreach (proverkaGU t in l)
                    { ((ProverkaGUViewModel)DataContext).Context.Entry<proverkaGU>(t).Reload();
                        ((ProverkaGUViewModel)DataContext).Context.proverkaGU.Attach(t);
                        LogData logd = new LogData();
                        logd.Add("Num", t.Num);
                        logd.Add("Okrug", t.Okrug);
                        logd.Add("Raion", t.Raion);
                        logd.Add("Street", t.Street);
                        logd.Add("Dom", t.Dom);
                        string s = string.Join(", ", logd.Values);
                        //App.Log.Info("Внесены изменения в запись {0}",s);
                    }
                }
            }
        }

        private void btnSave_Click(object sender, System.Windows.RoutedEventArgs e)
        {
            gridMain.RefreshData();
        }

        private void gridMain_AutoGeneratedColumns(object sender, System.Windows.RoutedEventArgs e)
        {
            cLink.BestFitWidth = 30;
        }
    }

                
}
