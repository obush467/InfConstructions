//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InfConstractions.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<proverkaGU> proverkaGU { get; set; }
        public virtual DbSet<GUPassport_Site> GUPassport_Sites { get; set; }
        public virtual DbSet<GUPassport> GUPassports { get; set; }
        public virtual DbSet<GUPassport_State> GUPassport_States { get; set; }
    
        public virtual int updateProverkaGU(Nullable<int> id, string ошибки_в_адресации_ГУ, string fact, string плашки, Nullable<bool> наличие_согласованного_макета, Nullable<bool> наличие_согласованного_паспорта, string примечание, Nullable<bool> проверено, Nullable<System.DateTimeOffset> updated)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var ошибки_в_адресации_ГУParameter = ошибки_в_адресации_ГУ != null ?
                new ObjectParameter("Ошибки_в_адресации_ГУ", ошибки_в_адресации_ГУ) :
                new ObjectParameter("Ошибки_в_адресации_ГУ", typeof(string));
    
            var factParameter = fact != null ?
                new ObjectParameter("Fact", fact) :
                new ObjectParameter("Fact", typeof(string));
    
            var плашкиParameter = плашки != null ?
                new ObjectParameter("Плашки", плашки) :
                new ObjectParameter("Плашки", typeof(string));
    
            var наличие_согласованного_макетаParameter = наличие_согласованного_макета.HasValue ?
                new ObjectParameter("Наличие_согласованного_макета", наличие_согласованного_макета) :
                new ObjectParameter("Наличие_согласованного_макета", typeof(bool));
    
            var наличие_согласованного_паспортаParameter = наличие_согласованного_паспорта.HasValue ?
                new ObjectParameter("Наличие_согласованного_паспорта", наличие_согласованного_паспорта) :
                new ObjectParameter("Наличие_согласованного_паспорта", typeof(bool));
    
            var примечаниеParameter = примечание != null ?
                new ObjectParameter("Примечание", примечание) :
                new ObjectParameter("Примечание", typeof(string));
    
            var провереноParameter = проверено.HasValue ?
                new ObjectParameter("Проверено", проверено) :
                new ObjectParameter("Проверено", typeof(bool));
    
            var updatedParameter = updated.HasValue ?
                new ObjectParameter("updated", updated) :
                new ObjectParameter("updated", typeof(System.DateTimeOffset));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateProverkaGU", idParameter, ошибки_в_адресации_ГУParameter, factParameter, плашкиParameter, наличие_согласованного_макетаParameter, наличие_согласованного_паспортаParameter, примечаниеParameter, провереноParameter, updatedParameter);
        }
    }
}
